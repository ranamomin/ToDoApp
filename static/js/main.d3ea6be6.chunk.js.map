{"version":3,"sources":["MyComponents/About.js","MyComponents/Header.js","MyComponents/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","style","color","mode","Header","to","title","id","aria-current","type","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","backgroundColor","toUpperCase","toLowerCase","newText","split","join","document","getElementById","select","msg","execCommand","console","log","button","buttonText","textContent","btnClassname","innerText","setTimeout","err","error","length","defaultProps","searchBar","prototype","PropTypes","string","bool","App","setMode","body","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d3ea6be6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div\r\n      className=\"container-sm mx-auto\"\r\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"#0b1b3c\" }}\r\n    >\r\n      <h1>About Us</h1>\r\n      <p>\r\n        TextTastic is a useful text utility that let us perform various function\r\n        to manipulate text. This website is made using React.js, JavaScript, and\r\n        NPM as a self learning project.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Header(props) {\r\n    return (\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link active' aria-current='page' to=\"about\" >About</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className={`form-check form-switch-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\nHeader.defaultProps= {\r\n    title: \"Your Title Here\",\r\n    searchBar: true\r\n}\r\nHeader.prototype = {\r\n    title: PropTypes.string,\r\n    searchBar: PropTypes.bool\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        setText(text.toUpperCase());\r\n    };\r\n    const handleLowerClick = () => {\r\n      setText(text.toLowerCase());\r\n    };\r\n    const handleOnChange = (event) => {\r\n       setText(event.target.value);\r\n    };\r\n    const handleClearClick = (event) => {\r\n      setText(\"\");\r\n    };\r\n    const handleCopyClick = (event) => {\r\n      let text = document.getElementById(\"myBox\");\r\n      text.select()\r\n      try {\r\n        let successful = document.execCommand(\"copy\");\r\n        let msg = successful ? \"successful\" : \"unsuccessful\";\r\n        console.log(\"Fallback: Copying text command was \" + msg);\r\n        let button = document.getElementById(\"btnCopyID\");\r\n        let buttonText = button.textContent;\r\n        let btnClassname = button.className;\r\n        \r\n        // Copy Text\r\n        button.innerText = \"Copied!\";\r\n        // btn btn-primary my-3 mx-2\r\n        button.className = \"btn btn-success my-3 mx-2\";\r\n        setTimeout(()=>{\r\n          button.innerText = buttonText ;\r\n          button.className = btnClassname;\r\n        },2000)\r\n\r\n      } catch (err) {\r\n        console.error(\"Fallback: Oops, unable to copy\", err);\r\n      }\r\n    };\r\n    const handleRemoveExtraSpacesClick = () =>{\r\n      // using regex to look for more than 1 space and split the text into an array\r\n      let newText = text.split(/[  ]+/);\r\n      // join the array with single space\r\n      setText(newText.join(\" \"));\r\n\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#0b1b3c\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb--3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#212529\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#0b1b3c\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-3 mx-2\"\r\n          onClick={handleLowerClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-3 mx-2\"\r\n          onClick={handleRemoveExtraSpacesClick}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-3 mx-2\"\r\n          id=\"btnCopyID\"\r\n          onClick={handleCopyClick}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-3 mx-2\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#0b1b3c\" }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#0b1b3c\" }}\r\n      >\r\n        <h1>Preview</h1>\r\n        <p>{text.length > 0 ? text : \"Enter text to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './MyComponents/About';\nimport Header from './MyComponents/Header';\nimport TextForm from './MyComponents/TextForm';\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#0b1b3c';\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  }\n  return (\n    <>\n      <Router >\n        <Header title=\"Texttastic\" mode={mode} toggleMode={toggleMode} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route path=\"/about\" element={<About mode={mode} />}>\n              <Route exact path=\"/about\" element={<About mode={mode} />} />\n            </Route>\n            <Route\n              exact\n              path=\"/\"\n              element={<TextForm heading=\"Enter your text below\" mode={mode} />}\n            >\n              <Route\n                exact\n                path=\"/about\"\n                element={\n                  <TextForm heading=\"Enter your text below\" mode={mode} />\n                }\n              />\n            </Route>\n          </Routes>\n          {/* <TextForm heading=\"Enter your text below\" mode={mode}/> */}\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}